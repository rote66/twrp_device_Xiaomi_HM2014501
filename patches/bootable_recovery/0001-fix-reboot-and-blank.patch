From 61296f6ccbcd9febad656c501e241bfa2d8e0903 Mon Sep 17 00:00:00 2001
From: rote66 <pontifex23872388@gmail.com>
Date: Wed, 21 Feb 2018 16:22:11 +0800
Subject: [PATCH] fix reboot and blank

Signed-off-by: rote66 <pontifex23872388@gmail.com>
---
 minuitwrp/Android.mk |  3 +++
 twrp-functions.cpp   | 34 ++++++++++++++++++++--------------
 twrp.cpp             |  5 +++++
 3 files changed, 28 insertions(+), 14 deletions(-)

diff --git a/minuitwrp/Android.mk b/minuitwrp/Android.mk
index 09bdb8d..adfb8fa 100644
--- a/minuitwrp/Android.mk
+++ b/minuitwrp/Android.mk
@@ -141,6 +141,9 @@ endif
 ifeq ($(TW_SCREEN_BLANK_ON_BOOT), true)
     LOCAL_CFLAGS += -DTW_SCREEN_BLANK_ON_BOOT
 endif
+ifeq ($(TW_NO_SCREEN_BLANK), true)
+    LOCAL_CFLAGS += -DTW_NO_SCREEN_BLANK
+endif
 ifeq ($(TW_FBIOPAN), true)
     LOCAL_CFLAGS += -DTW_FBIOPAN
 endif
diff --git a/twrp-functions.cpp b/twrp-functions.cpp
index b7bcebe..1b1aa45 100644
--- a/twrp-functions.cpp
+++ b/twrp-functions.cpp
@@ -46,14 +46,17 @@
 #include "variables.h"
 #include "bootloader_message_twrp/include/bootloader_message_twrp/bootloader_message.h"
 #include "cutils/properties.h"
+#ifdef ANDROID_RB_POWEROFF
 #include "cutils/android_reboot.h"
-#include <sys/reboot.h>
+#endif
 #endif // ndef BUILD_TWRPTAR_MAIN
 #ifndef TW_EXCLUDE_ENCRYPTED_BACKUPS
 	#include "openaes/inc/oaes_lib.h"
 #endif
 #include "set_metadata.h"
 
+#include "cutils/android_reboot.h"
+
 extern "C" {
 	#include "libcrecovery/common.h"
 }
@@ -582,46 +585,49 @@ int TWFunc::tw_reboot(RebootCommand command)
 	switch (command) {
 		case rb_current:
 		case rb_system:
+		Update_Log_File();
 			Update_Intent_File("s");
 			sync();
 			check_and_run_script("/sbin/rebootsystem.sh", "reboot system");
-#ifdef ANDROID_RB_PROPERTY
-			return property_set(ANDROID_RB_PROPERTY, "reboot,");
-#elif defined(ANDROID_RB_RESTART)
-			return android_reboot(ANDROID_RB_RESTART, 0, 0);
-#else
+			
 			return reboot(RB_AUTOBOOT);
-#endif
+
 		case rb_recovery:
 			check_and_run_script("/sbin/rebootrecovery.sh", "reboot recovery");
 #ifdef ANDROID_RB_PROPERTY
-			return property_set(ANDROID_RB_PROPERTY, "reboot,recovery");
+ 	property_set(ANDROID_RB_PROPERTY, "reboot,recovery");
 #else
 			return __reboot(LINUX_REBOOT_MAGIC1, LINUX_REBOOT_MAGIC2, LINUX_REBOOT_CMD_RESTART2, (void*) "recovery");
 #endif
+ sleep(5);
+ return 0;
 		case rb_bootloader:
 			check_and_run_script("/sbin/rebootbootloader.sh", "reboot bootloader");
 #ifdef ANDROID_RB_PROPERTY
-			return property_set(ANDROID_RB_PROPERTY, "reboot,bootloader");
+			property_set(ANDROID_RB_PROPERTY, "reboot,bootloader");
 #else
 			return __reboot(LINUX_REBOOT_MAGIC1, LINUX_REBOOT_MAGIC2, LINUX_REBOOT_CMD_RESTART2, (void*) "bootloader");
 #endif
+ sleep(5);
+ return 0;
 		case rb_poweroff:
 			check_and_run_script("/sbin/poweroff.sh", "power off");
-#ifdef ANDROID_RB_PROPERTY
+#ifdef ANDROID_RB_POWEROFF
 			return property_set(ANDROID_RB_PROPERTY, "shutdown,");
 #elif defined(ANDROID_RB_POWEROFF)
-			return android_reboot(ANDROID_RB_POWEROFF, 0, 0);
-#else
-			return reboot(RB_POWER_OFF);
+			android_reboot(ANDROID_RB_POWEROFF, 0, 0);
 #endif
+			return reboot(RB_POWER_OFF);
+
 		case rb_download:
 			check_and_run_script("/sbin/rebootdownload.sh", "reboot download");
 #ifdef ANDROID_RB_PROPERTY
-			return property_set(ANDROID_RB_PROPERTY, "reboot,download");
+			property_set(ANDROID_RB_PROPERTY, "reboot,download");
 #else
 			return __reboot(LINUX_REBOOT_MAGIC1, LINUX_REBOOT_MAGIC2, LINUX_REBOOT_CMD_RESTART2, (void*) "download");
 #endif
+ sleep(5);
+ return 0;
 		default:
 			return -1;
 	}
diff --git a/twrp.cpp b/twrp.cpp
index 8c2a24f..ff795f1 100644
--- a/twrp.cpp
+++ b/twrp.cpp
@@ -400,5 +400,10 @@ int main(int argc, char **argv) {
 	else
 		TWFunc::tw_reboot(rb_system);
 
+#ifdef ANDROID_RB_RESTART
+ 	android_reboot(ANDROID_RB_RESTART, 0, 0);
+#else
+ 	reboot(RB_AUTOBOOT);
+#endif
 	return 0;
 }
-- 
1.9.1

